// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sync_settings.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SyncSetting_Type int32

const (
	SyncSetting_UNKNOWN                     SyncSetting_Type = 0
	SyncSetting_CURRENCY                    SyncSetting_Type = 1
	SyncSetting_GIF_RECENTS                 SyncSetting_Type = 2
	SyncSetting_GIF_FAVOURITES              SyncSetting_Type = 3
	SyncSetting_MESSAGES_FROM_CONTACTS_ONLY SyncSetting_Type = 4
	SyncSetting_PREFERRED_NAME              SyncSetting_Type = 5
	SyncSetting_PREVIEW_PRIVACY             SyncSetting_Type = 6
	SyncSetting_PROFILE_PICTURES_SHOW_TO    SyncSetting_Type = 7
	SyncSetting_PROFILE_PICTURES_VISIBILITY SyncSetting_Type = 8
	SyncSetting_SEND_STATUS_UPDATES         SyncSetting_Type = 9
	SyncSetting_STICKERS_PACKS_INSTALLED    SyncSetting_Type = 10
	SyncSetting_STICKERS_PACKS_PENDING      SyncSetting_Type = 11
	SyncSetting_STICKERS_RECENT_STICKERS    SyncSetting_Type = 12
)

var SyncSetting_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "CURRENCY",
	2:  "GIF_RECENTS",
	3:  "GIF_FAVOURITES",
	4:  "MESSAGES_FROM_CONTACTS_ONLY",
	5:  "PREFERRED_NAME",
	6:  "PREVIEW_PRIVACY",
	7:  "PROFILE_PICTURES_SHOW_TO",
	8:  "PROFILE_PICTURES_VISIBILITY",
	9:  "SEND_STATUS_UPDATES",
	10: "STICKERS_PACKS_INSTALLED",
	11: "STICKERS_PACKS_PENDING",
	12: "STICKERS_RECENT_STICKERS",
}

var SyncSetting_Type_value = map[string]int32{
	"UNKNOWN":                     0,
	"CURRENCY":                    1,
	"GIF_RECENTS":                 2,
	"GIF_FAVOURITES":              3,
	"MESSAGES_FROM_CONTACTS_ONLY": 4,
	"PREFERRED_NAME":              5,
	"PREVIEW_PRIVACY":             6,
	"PROFILE_PICTURES_SHOW_TO":    7,
	"PROFILE_PICTURES_VISIBILITY": 8,
	"SEND_STATUS_UPDATES":         9,
	"STICKERS_PACKS_INSTALLED":    10,
	"STICKERS_PACKS_PENDING":      11,
	"STICKERS_RECENT_STICKERS":    12,
}

func (x SyncSetting_Type) String() string {
	return proto.EnumName(SyncSetting_Type_name, int32(x))
}

func (SyncSetting_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f7a0bce2873c78, []int{0, 0}
}

type SyncSetting struct {
	Type  SyncSetting_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protobuf.SyncSetting_Type" json:"type,omitempty"`
	Clock uint64           `protobuf:"varint,2,opt,name=clock,proto3" json:"clock,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*SyncSetting_ValueString
	//	*SyncSetting_ValueBytes
	//	*SyncSetting_ValueBool
	//	*SyncSetting_ValueInt64
	Value                isSyncSetting_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SyncSetting) Reset()         { *m = SyncSetting{} }
func (m *SyncSetting) String() string { return proto.CompactTextString(m) }
func (*SyncSetting) ProtoMessage()    {}
func (*SyncSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f7a0bce2873c78, []int{0}
}
func (m *SyncSetting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncSetting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncSetting.Merge(m, src)
}
func (m *SyncSetting) XXX_Size() int {
	return m.Size()
}
func (m *SyncSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncSetting.DiscardUnknown(m)
}

var xxx_messageInfo_SyncSetting proto.InternalMessageInfo

type isSyncSetting_Value interface {
	isSyncSetting_Value()
	MarshalTo([]byte) (int, error)
	Size() int
}

type SyncSetting_ValueString struct {
	ValueString string `protobuf:"bytes,3,opt,name=value_string,json=valueString,proto3,oneof" json:"value_string,omitempty"`
}
type SyncSetting_ValueBytes struct {
	ValueBytes []byte `protobuf:"bytes,4,opt,name=value_bytes,json=valueBytes,proto3,oneof" json:"value_bytes,omitempty"`
}
type SyncSetting_ValueBool struct {
	ValueBool bool `protobuf:"varint,5,opt,name=value_bool,json=valueBool,proto3,oneof" json:"value_bool,omitempty"`
}
type SyncSetting_ValueInt64 struct {
	ValueInt64 int64 `protobuf:"varint,6,opt,name=value_int64,json=valueInt64,proto3,oneof" json:"value_int64,omitempty"`
}

func (*SyncSetting_ValueString) isSyncSetting_Value() {}
func (*SyncSetting_ValueBytes) isSyncSetting_Value()  {}
func (*SyncSetting_ValueBool) isSyncSetting_Value()   {}
func (*SyncSetting_ValueInt64) isSyncSetting_Value()  {}

func (m *SyncSetting) GetValue() isSyncSetting_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SyncSetting) GetType() SyncSetting_Type {
	if m != nil {
		return m.Type
	}
	return SyncSetting_UNKNOWN
}

func (m *SyncSetting) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncSetting) GetValueString() string {
	if x, ok := m.GetValue().(*SyncSetting_ValueString); ok {
		return x.ValueString
	}
	return ""
}

func (m *SyncSetting) GetValueBytes() []byte {
	if x, ok := m.GetValue().(*SyncSetting_ValueBytes); ok {
		return x.ValueBytes
	}
	return nil
}

func (m *SyncSetting) GetValueBool() bool {
	if x, ok := m.GetValue().(*SyncSetting_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

func (m *SyncSetting) GetValueInt64() int64 {
	if x, ok := m.GetValue().(*SyncSetting_ValueInt64); ok {
		return x.ValueInt64
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SyncSetting) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SyncSetting_ValueString)(nil),
		(*SyncSetting_ValueBytes)(nil),
		(*SyncSetting_ValueBool)(nil),
		(*SyncSetting_ValueInt64)(nil),
	}
}

func init() {
	proto.RegisterEnum("protobuf.SyncSetting_Type", SyncSetting_Type_name, SyncSetting_Type_value)
	proto.RegisterType((*SyncSetting)(nil), "protobuf.SyncSetting")
}

func init() { proto.RegisterFile("sync_settings.proto", fileDescriptor_e2f7a0bce2873c78) }

var fileDescriptor_e2f7a0bce2873c78 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x80, 0xeb, 0x6d, 0xfa, 0x37, 0xa9, 0x76, 0x2d, 0x17, 0x41, 0xb4, 0x40, 0x37, 0x2c, 0x97,
	0x9c, 0x82, 0x04, 0x88, 0x0b, 0xa7, 0x34, 0x75, 0x5b, 0xab, 0xad, 0x13, 0xd9, 0x4e, 0xab, 0x72,
	0xb1, 0x68, 0x55, 0x56, 0x15, 0x55, 0x52, 0x6d, 0xb2, 0x48, 0x79, 0x13, 0xde, 0x81, 0x97, 0xe0,
	0xc8, 0x91, 0x47, 0x40, 0xe5, 0x45, 0x50, 0x12, 0xca, 0xef, 0xc9, 0x9e, 0x6f, 0xbe, 0x19, 0x8f,
	0x46, 0x86, 0x5e, 0x9a, 0xc7, 0x1b, 0x9d, 0x6e, 0xb3, 0x6c, 0x17, 0xdf, 0xa4, 0xee, 0xe1, 0x36,
	0xc9, 0x12, 0xd2, 0x2e, 0x8f, 0xf5, 0xdd, 0xbb, 0xeb, 0x4f, 0x06, 0x98, 0x32, 0x8f, 0x37, 0xb2,
	0x12, 0x88, 0x0b, 0x46, 0x96, 0x1f, 0xb6, 0x16, 0xb2, 0x91, 0x73, 0xfe, 0xfc, 0xd2, 0x3d, 0x89,
	0xee, 0x1f, 0x92, 0xab, 0xf2, 0xc3, 0x56, 0x94, 0x1e, 0xb9, 0x07, 0x8d, 0xcd, 0x3e, 0xd9, 0xbc,
	0xb7, 0xce, 0x6c, 0xe4, 0x18, 0xa2, 0x0a, 0xc8, 0x53, 0xe8, 0x7e, 0x78, 0xbb, 0xbf, 0xdb, 0xea,
	0x34, 0xbb, 0xdd, 0xc5, 0x37, 0x56, 0xdd, 0x46, 0x4e, 0x67, 0x52, 0x13, 0x66, 0x49, 0x65, 0x09,
	0xc9, 0x13, 0xa8, 0x42, 0xbd, 0xce, 0xb3, 0x6d, 0x6a, 0x19, 0x36, 0x72, 0xba, 0x93, 0x9a, 0x80,
	0x12, 0x0e, 0x0a, 0x46, 0xae, 0x00, 0x7e, 0x2a, 0x49, 0xb2, 0xb7, 0x1a, 0x36, 0x72, 0xda, 0x93,
	0x9a, 0xe8, 0x54, 0x46, 0x92, 0xec, 0x7f, 0xf7, 0xd8, 0xc5, 0xd9, 0xab, 0x97, 0x56, 0xd3, 0x46,
	0x4e, 0xfd, 0x57, 0x0f, 0x56, 0xb0, 0xeb, 0xcf, 0x67, 0x60, 0x14, 0x03, 0x13, 0x13, 0x5a, 0x11,
	0x9f, 0xf2, 0x60, 0xc9, 0x71, 0x8d, 0x74, 0xa1, 0xed, 0x47, 0x42, 0x50, 0xee, 0xaf, 0x30, 0x22,
	0x17, 0x60, 0x8e, 0xd9, 0x48, 0x0b, 0xea, 0x53, 0xae, 0x24, 0x3e, 0x23, 0x04, 0xce, 0x0b, 0x30,
	0xf2, 0x16, 0x41, 0x24, 0x98, 0xa2, 0x12, 0xd7, 0xc9, 0x15, 0x3c, 0x9c, 0x53, 0x29, 0xbd, 0x31,
	0x95, 0x7a, 0x24, 0x82, 0xb9, 0xf6, 0x03, 0xae, 0x3c, 0x5f, 0x49, 0x1d, 0xf0, 0xd9, 0x0a, 0x1b,
	0x45, 0x51, 0x28, 0xe8, 0x88, 0x0a, 0x41, 0x87, 0x9a, 0x7b, 0x73, 0x8a, 0x1b, 0xa4, 0x07, 0x17,
	0xa1, 0xa0, 0x0b, 0x46, 0x97, 0x3a, 0x14, 0x6c, 0xe1, 0xf9, 0x2b, 0xdc, 0x24, 0x8f, 0xc0, 0x0a,
	0x45, 0x30, 0x62, 0x33, 0xaa, 0x43, 0xe6, 0xab, 0x48, 0x50, 0xa9, 0xe5, 0x24, 0x58, 0x6a, 0x15,
	0xe0, 0x56, 0xf1, 0xce, 0x7f, 0xd9, 0x05, 0x93, 0x6c, 0xc0, 0x66, 0x4c, 0xad, 0x70, 0x9b, 0x3c,
	0x80, 0x9e, 0xa4, 0x7c, 0xa8, 0xa5, 0xf2, 0x54, 0x24, 0x75, 0x14, 0x0e, 0xbd, 0x62, 0xc2, 0x4e,
	0xd1, 0x57, 0x2a, 0xe6, 0x4f, 0xa9, 0x90, 0x3a, 0xf4, 0xfc, 0xa9, 0xd4, 0x8c, 0x4b, 0xe5, 0xcd,
	0x66, 0x74, 0x88, 0x81, 0x5c, 0xc2, 0xfd, 0x7f, 0xb2, 0x21, 0xe5, 0x43, 0xc6, 0xc7, 0xd8, 0xfc,
	0xab, 0xb2, 0xda, 0x82, 0x3e, 0xc5, 0xb8, 0x3b, 0x68, 0x41, 0xa3, 0x5a, 0xf9, 0xe3, 0x2f, 0xc7,
	0x3e, 0xfa, 0x7a, 0xec, 0xa3, 0x6f, 0xc7, 0x3e, 0xfa, 0xf8, 0xbd, 0x5f, 0x7b, 0x63, 0xba, 0xcf,
	0x5e, 0x9f, 0xfe, 0xc8, 0xba, 0x59, 0xde, 0x5e, 0xfc, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x96,
	0xdf, 0x8e, 0x74, 0x02, 0x00, 0x00,
}

func (m *SyncSetting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncSetting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncSetting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		{
			size := m.Value.Size()
			i -= size
			if _, err := m.Value.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Clock != 0 {
		i = encodeVarintSyncSettings(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x10
	}
	if m.Type != 0 {
		i = encodeVarintSyncSettings(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncSetting_ValueString) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncSetting_ValueString) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.ValueString)
	copy(dAtA[i:], m.ValueString)
	i = encodeVarintSyncSettings(dAtA, i, uint64(len(m.ValueString)))
	i--
	dAtA[i] = 0x1a
	return len(dAtA) - i, nil
}
func (m *SyncSetting_ValueBytes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncSetting_ValueBytes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ValueBytes != nil {
		i -= len(m.ValueBytes)
		copy(dAtA[i:], m.ValueBytes)
		i = encodeVarintSyncSettings(dAtA, i, uint64(len(m.ValueBytes)))
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *SyncSetting_ValueBool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncSetting_ValueBool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ValueBool {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	return len(dAtA) - i, nil
}
func (m *SyncSetting_ValueInt64) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncSetting_ValueInt64) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintSyncSettings(dAtA, i, uint64(m.ValueInt64))
	i--
	dAtA[i] = 0x30
	return len(dAtA) - i, nil
}
func encodeVarintSyncSettings(dAtA []byte, offset int, v uint64) int {
	offset -= sovSyncSettings(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SyncSetting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovSyncSettings(uint64(m.Type))
	}
	if m.Clock != 0 {
		n += 1 + sovSyncSettings(uint64(m.Clock))
	}
	if m.Value != nil {
		n += m.Value.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncSetting_ValueString) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValueString)
	n += 1 + l + sovSyncSettings(uint64(l))
	return n
}
func (m *SyncSetting_ValueBytes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ValueBytes != nil {
		l = len(m.ValueBytes)
		n += 1 + l + sovSyncSettings(uint64(l))
	}
	return n
}
func (m *SyncSetting_ValueBool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *SyncSetting_ValueInt64) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovSyncSettings(uint64(m.ValueInt64))
	return n
}

func sovSyncSettings(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSyncSettings(x uint64) (n int) {
	return sovSyncSettings(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SyncSetting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyncSettings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncSetting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncSetting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= SyncSetting_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyncSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSyncSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = &SyncSetting_ValueString{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSyncSettings
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSyncSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := make([]byte, postIndex-iNdEx)
			copy(v, dAtA[iNdEx:postIndex])
			m.Value = &SyncSetting_ValueBytes{v}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueBool", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Value = &SyncSetting_ValueBool{b}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueInt64", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &SyncSetting_ValueInt64{v}
		default:
			iNdEx = preIndex
			skippy, err := skipSyncSettings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSyncSettings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSyncSettings(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSyncSettings
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSyncSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSyncSettings
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSyncSettings
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSyncSettings
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSyncSettings        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSyncSettings          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSyncSettings = fmt.Errorf("proto: unexpected end of group")
)
