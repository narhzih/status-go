// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: membership_update_message.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MembershipUpdateEvent_EventType int32

const (
	MembershipUpdateEvent_UNKNOWN        MembershipUpdateEvent_EventType = 0
	MembershipUpdateEvent_CHAT_CREATED   MembershipUpdateEvent_EventType = 1
	MembershipUpdateEvent_NAME_CHANGED   MembershipUpdateEvent_EventType = 2
	MembershipUpdateEvent_MEMBERS_ADDED  MembershipUpdateEvent_EventType = 3
	MembershipUpdateEvent_MEMBER_JOINED  MembershipUpdateEvent_EventType = 4
	MembershipUpdateEvent_MEMBER_REMOVED MembershipUpdateEvent_EventType = 5
	MembershipUpdateEvent_ADMINS_ADDED   MembershipUpdateEvent_EventType = 6
	MembershipUpdateEvent_ADMIN_REMOVED  MembershipUpdateEvent_EventType = 7
)

var MembershipUpdateEvent_EventType_name = map[int32]string{
	0: "UNKNOWN",
	1: "CHAT_CREATED",
	2: "NAME_CHANGED",
	3: "MEMBERS_ADDED",
	4: "MEMBER_JOINED",
	5: "MEMBER_REMOVED",
	6: "ADMINS_ADDED",
	7: "ADMIN_REMOVED",
}

var MembershipUpdateEvent_EventType_value = map[string]int32{
	"UNKNOWN":        0,
	"CHAT_CREATED":   1,
	"NAME_CHANGED":   2,
	"MEMBERS_ADDED":  3,
	"MEMBER_JOINED":  4,
	"MEMBER_REMOVED": 5,
	"ADMINS_ADDED":   6,
	"ADMIN_REMOVED":  7,
}

func (x MembershipUpdateEvent_EventType) String() string {
	return proto.EnumName(MembershipUpdateEvent_EventType_name, int32(x))
}

func (MembershipUpdateEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8d37dd0dc857a6be, []int{0, 0}
}

type MembershipUpdateEvent struct {
	// Lamport timestamp of the event
	Clock uint64 `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	// List of public keys of objects of the action
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// Name of the chat for the CHAT_CREATED/NAME_CHANGED event types
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the event
	Type                 MembershipUpdateEvent_EventType `protobuf:"varint,4,opt,name=type,proto3,enum=protobuf.MembershipUpdateEvent_EventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MembershipUpdateEvent) Reset()         { *m = MembershipUpdateEvent{} }
func (m *MembershipUpdateEvent) String() string { return proto.CompactTextString(m) }
func (*MembershipUpdateEvent) ProtoMessage()    {}
func (*MembershipUpdateEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d37dd0dc857a6be, []int{0}
}
func (m *MembershipUpdateEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MembershipUpdateEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MembershipUpdateEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MembershipUpdateEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipUpdateEvent.Merge(m, src)
}
func (m *MembershipUpdateEvent) XXX_Size() int {
	return m.Size()
}
func (m *MembershipUpdateEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipUpdateEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipUpdateEvent proto.InternalMessageInfo

func (m *MembershipUpdateEvent) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *MembershipUpdateEvent) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *MembershipUpdateEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MembershipUpdateEvent) GetType() MembershipUpdateEvent_EventType {
	if m != nil {
		return m.Type
	}
	return MembershipUpdateEvent_UNKNOWN
}

// MembershipUpdateMessage is a message used to propagate information
// about group membership changes.
// For more information, see https://github.com/status-im/specs/blob/master/status-group-chats-spec.md.
type MembershipUpdateMessage struct {
	// The chat id of the private group chat
	ChatId string `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// A list of events for this group chat, first x bytes are the signature, then is a
	// protobuf encoded MembershipUpdateEvent
	Events [][]byte `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// An optional chat message
	//
	// Types that are valid to be assigned to ChatEntity:
	//	*MembershipUpdateMessage_Message
	//	*MembershipUpdateMessage_EmojiReaction
	ChatEntity           isMembershipUpdateMessage_ChatEntity `protobuf_oneof:"chat_entity"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *MembershipUpdateMessage) Reset()         { *m = MembershipUpdateMessage{} }
func (m *MembershipUpdateMessage) String() string { return proto.CompactTextString(m) }
func (*MembershipUpdateMessage) ProtoMessage()    {}
func (*MembershipUpdateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d37dd0dc857a6be, []int{1}
}
func (m *MembershipUpdateMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MembershipUpdateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MembershipUpdateMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MembershipUpdateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipUpdateMessage.Merge(m, src)
}
func (m *MembershipUpdateMessage) XXX_Size() int {
	return m.Size()
}
func (m *MembershipUpdateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipUpdateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipUpdateMessage proto.InternalMessageInfo

type isMembershipUpdateMessage_ChatEntity interface {
	isMembershipUpdateMessage_ChatEntity()
	MarshalTo([]byte) (int, error)
	Size() int
}

type MembershipUpdateMessage_Message struct {
	Message *ChatMessage `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}
type MembershipUpdateMessage_EmojiReaction struct {
	EmojiReaction *EmojiReaction `protobuf:"bytes,4,opt,name=emoji_reaction,json=emojiReaction,proto3,oneof" json:"emoji_reaction,omitempty"`
}

func (*MembershipUpdateMessage_Message) isMembershipUpdateMessage_ChatEntity()       {}
func (*MembershipUpdateMessage_EmojiReaction) isMembershipUpdateMessage_ChatEntity() {}

func (m *MembershipUpdateMessage) GetChatEntity() isMembershipUpdateMessage_ChatEntity {
	if m != nil {
		return m.ChatEntity
	}
	return nil
}

func (m *MembershipUpdateMessage) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *MembershipUpdateMessage) GetEvents() [][]byte {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *MembershipUpdateMessage) GetMessage() *ChatMessage {
	if x, ok := m.GetChatEntity().(*MembershipUpdateMessage_Message); ok {
		return x.Message
	}
	return nil
}

func (m *MembershipUpdateMessage) GetEmojiReaction() *EmojiReaction {
	if x, ok := m.GetChatEntity().(*MembershipUpdateMessage_EmojiReaction); ok {
		return x.EmojiReaction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MembershipUpdateMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MembershipUpdateMessage_Message)(nil),
		(*MembershipUpdateMessage_EmojiReaction)(nil),
	}
}

func init() {
	proto.RegisterEnum("protobuf.MembershipUpdateEvent_EventType", MembershipUpdateEvent_EventType_name, MembershipUpdateEvent_EventType_value)
	proto.RegisterType((*MembershipUpdateEvent)(nil), "protobuf.MembershipUpdateEvent")
	proto.RegisterType((*MembershipUpdateMessage)(nil), "protobuf.MembershipUpdateMessage")
}

func init() { proto.RegisterFile("membership_update_message.proto", fileDescriptor_8d37dd0dc857a6be) }

var fileDescriptor_8d37dd0dc857a6be = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0x66, 0xa0, 0x0b, 0x72, 0xba, 0x90, 0x7a, 0xb2, 0x2b, 0xcd, 0x26, 0x22, 0xe1, 0x0a, 0x6f,
	0x6a, 0xc4, 0x4b, 0x63, 0x62, 0x61, 0x26, 0x16, 0x4d, 0x4b, 0x32, 0xb2, 0x9a, 0x78, 0xd3, 0x94,
	0x32, 0x4a, 0xd5, 0xfe, 0x04, 0x66, 0x4d, 0x78, 0x13, 0x13, 0x5f, 0xc4, 0x47, 0xf0, 0xca, 0xf8,
	0x08, 0x06, 0x5f, 0xc4, 0x74, 0xda, 0x82, 0x98, 0xbd, 0x69, 0xe7, 0xfb, 0xce, 0x7c, 0xdf, 0x9c,
	0xf3, 0x1d, 0x78, 0x10, 0x8b, 0x78, 0x29, 0x36, 0xdb, 0x75, 0x94, 0xf9, 0x37, 0xd9, 0x2a, 0x90,
	0xc2, 0x8f, 0xc5, 0x76, 0x1b, 0x7c, 0x10, 0x56, 0xb6, 0x49, 0x65, 0x8a, 0x77, 0xd4, 0x6f, 0x79,
	0xf3, 0xfe, 0x0a, 0xc3, 0x75, 0x20, 0x4f, 0xab, 0x57, 0x17, 0x22, 0x4e, 0x3f, 0x46, 0xfe, 0x46,
	0x04, 0xa1, 0x8c, 0xd2, 0xa4, 0x60, 0x87, 0xdf, 0xeb, 0x70, 0xe9, 0x1e, 0x7c, 0xaf, 0x95, 0x2d,
	0xfb, 0x22, 0x12, 0x89, 0x17, 0x70, 0x16, 0x7e, 0x4e, 0xc3, 0x4f, 0x26, 0x19, 0x90, 0x91, 0xc6,
	0x0b, 0x80, 0x26, 0xb4, 0xca, 0x36, 0xcc, 0xfa, 0xa0, 0x31, 0x6a, 0xf3, 0x0a, 0x22, 0x82, 0x96,
	0x04, 0xb1, 0x30, 0x1b, 0x03, 0x32, 0x6a, 0x73, 0x75, 0xc6, 0x67, 0xa0, 0xc9, 0x5d, 0x26, 0x4c,
	0x6d, 0x40, 0x46, 0xdd, 0xf1, 0x43, 0xab, 0x6a, 0xd0, 0xba, 0xf5, 0x49, 0x4b, 0x7d, 0x17, 0xbb,
	0x4c, 0x70, 0x25, 0x1b, 0x7e, 0x23, 0xd0, 0x3e, 0x70, 0xa8, 0x43, 0xeb, 0xda, 0x7b, 0xe5, 0xcd,
	0xdf, 0x7a, 0x46, 0x0d, 0x0d, 0x38, 0x9f, 0x3a, 0xf6, 0xc2, 0x9f, 0x72, 0x66, 0x2f, 0x18, 0x35,
	0x48, 0xce, 0x78, 0xb6, 0xcb, 0xfc, 0xa9, 0x63, 0x7b, 0x2f, 0x18, 0x35, 0xea, 0x78, 0x17, 0x3a,
	0x2e, 0x73, 0x27, 0x8c, 0xbf, 0xf6, 0x6d, 0x4a, 0x19, 0x35, 0x1a, 0x47, 0xca, 0x7f, 0x39, 0x9f,
	0x79, 0x8c, 0x1a, 0x1a, 0x22, 0x74, 0x4b, 0x8a, 0x33, 0x77, 0xfe, 0x86, 0x51, 0xe3, 0x2c, 0xf7,
	0xb2, 0xa9, 0x3b, 0xf3, 0x2a, 0x61, 0x33, 0x17, 0x2a, 0xe6, 0x70, 0xa9, 0x35, 0xfc, 0x49, 0xa0,
	0xf7, 0xff, 0x1c, 0x6e, 0x11, 0x39, 0xf6, 0xa0, 0xa5, 0x56, 0x10, 0xad, 0x54, 0x7c, 0x6d, 0xde,
	0xcc, 0xe1, 0x6c, 0x85, 0xf7, 0xa0, 0x29, 0xf2, 0x89, 0x8a, 0xf8, 0xce, 0x79, 0x89, 0xf0, 0x71,
	0x9e, 0xab, 0xd2, 0xaa, 0x00, 0xf5, 0xf1, 0xe5, 0x31, 0xac, 0xe9, 0x3a, 0x90, 0xa5, 0xb1, 0x53,
	0xe3, 0xd5, 0x3d, 0x7c, 0x0e, 0xdd, 0xd3, 0x95, 0xaa, 0x98, 0xf5, 0x71, 0xef, 0xa8, 0x64, 0x79,
	0x9d, 0x97, 0x65, 0xa7, 0xc6, 0x3b, 0xe2, 0x5f, 0x62, 0xd2, 0x01, 0x5d, 0x75, 0x29, 0x12, 0x19,
	0xc9, 0xdd, 0xe4, 0xfe, 0x8f, 0x7d, 0x9f, 0xfc, 0xda, 0xf7, 0xc9, 0xef, 0x7d, 0x9f, 0x7c, 0xfd,
	0xd3, 0xaf, 0xbd, 0xd3, 0xad, 0x47, 0x4f, 0x2b, 0xb3, 0x65, 0x53, 0x9d, 0x9e, 0xfc, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x06, 0x87, 0x7c, 0x74, 0x88, 0x02, 0x00, 0x00,
}

func (m *MembershipUpdateEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MembershipUpdateEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MembershipUpdateEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Members[iNdEx])
			copy(dAtA[i:], m.Members[iNdEx])
			i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(len(m.Members[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Clock != 0 {
		i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MembershipUpdateMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MembershipUpdateMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MembershipUpdateMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatEntity != nil {
		{
			size := m.ChatEntity.Size()
			i -= size
			if _, err := m.ChatEntity.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Events[iNdEx])
			copy(dAtA[i:], m.Events[iNdEx])
			i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(len(m.Events[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ChatId) > 0 {
		i -= len(m.ChatId)
		copy(dAtA[i:], m.ChatId)
		i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(len(m.ChatId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MembershipUpdateMessage_Message) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MembershipUpdateMessage_Message) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *MembershipUpdateMessage_EmojiReaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MembershipUpdateMessage_EmojiReaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.EmojiReaction != nil {
		{
			size, err := m.EmojiReaction.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMembershipUpdateMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func encodeVarintMembershipUpdateMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovMembershipUpdateMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MembershipUpdateEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovMembershipUpdateMessage(uint64(m.Clock))
	}
	if len(m.Members) > 0 {
		for _, s := range m.Members {
			l = len(s)
			n += 1 + l + sovMembershipUpdateMessage(uint64(l))
		}
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMembershipUpdateMessage(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovMembershipUpdateMessage(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MembershipUpdateMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChatId)
	if l > 0 {
		n += 1 + l + sovMembershipUpdateMessage(uint64(l))
	}
	if len(m.Events) > 0 {
		for _, b := range m.Events {
			l = len(b)
			n += 1 + l + sovMembershipUpdateMessage(uint64(l))
		}
	}
	if m.ChatEntity != nil {
		n += m.ChatEntity.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MembershipUpdateMessage_Message) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovMembershipUpdateMessage(uint64(l))
	}
	return n
}
func (m *MembershipUpdateMessage_EmojiReaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EmojiReaction != nil {
		l = m.EmojiReaction.Size()
		n += 1 + l + sovMembershipUpdateMessage(uint64(l))
	}
	return n
}

func sovMembershipUpdateMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMembershipUpdateMessage(x uint64) (n int) {
	return sovMembershipUpdateMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MembershipUpdateEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMembershipUpdateMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MembershipUpdateEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MembershipUpdateEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= MembershipUpdateEvent_EventType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMembershipUpdateMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MembershipUpdateMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMembershipUpdateMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MembershipUpdateMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MembershipUpdateMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, make([]byte, postIndex-iNdEx))
			copy(m.Events[len(m.Events)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ChatMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ChatEntity = &MembershipUpdateMessage_Message{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmojiReaction", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmojiReaction{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ChatEntity = &MembershipUpdateMessage_EmojiReaction{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMembershipUpdateMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMembershipUpdateMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMembershipUpdateMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMembershipUpdateMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMembershipUpdateMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMembershipUpdateMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMembershipUpdateMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMembershipUpdateMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMembershipUpdateMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMembershipUpdateMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMembershipUpdateMessage = fmt.Errorf("proto: unexpected end of group")
)
